// Generated by Dagger (https://google.github.io/dagger).
package com.byoutline.kickmaterial.dagger;

import com.byoutline.kickmaterial.api.KickMaterialRequestInterceptor;
import com.byoutline.kickmaterial.api.KickMaterialService;
import com.google.gson.Gson;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvidesKickMaterialServiceFactory
    implements Factory<KickMaterialService> {
  private final AppModule module;

  private final Provider<KickMaterialRequestInterceptor> requestInterceptorProvider;

  private final Provider<Gson> gsonProvider;

  public AppModule_ProvidesKickMaterialServiceFactory(
      AppModule module,
      Provider<KickMaterialRequestInterceptor> requestInterceptorProvider,
      Provider<Gson> gsonProvider) {
    this.module = module;
    this.requestInterceptorProvider = requestInterceptorProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public KickMaterialService get() {
    return provideInstance(module, requestInterceptorProvider, gsonProvider);
  }

  public static KickMaterialService provideInstance(
      AppModule module,
      Provider<KickMaterialRequestInterceptor> requestInterceptorProvider,
      Provider<Gson> gsonProvider) {
    return proxyProvidesKickMaterialService(
        module, requestInterceptorProvider.get(), gsonProvider.get());
  }

  public static AppModule_ProvidesKickMaterialServiceFactory create(
      AppModule module,
      Provider<KickMaterialRequestInterceptor> requestInterceptorProvider,
      Provider<Gson> gsonProvider) {
    return new AppModule_ProvidesKickMaterialServiceFactory(
        module, requestInterceptorProvider, gsonProvider);
  }

  public static KickMaterialService proxyProvidesKickMaterialService(
      AppModule instance, KickMaterialRequestInterceptor requestInterceptor, Gson gson) {
    return Preconditions.checkNotNull(
        instance.providesKickMaterialService(requestInterceptor, gson),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
