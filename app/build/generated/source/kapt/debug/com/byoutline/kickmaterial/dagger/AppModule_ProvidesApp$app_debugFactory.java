// Generated by Dagger (https://google.github.io/dagger).
package com.byoutline.kickmaterial.dagger;

import com.byoutline.kickmaterial.KickMaterialApp;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvidesApp$app_debugFactory implements Factory<KickMaterialApp> {
  private final AppModule module;

  public AppModule_ProvidesApp$app_debugFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public KickMaterialApp get() {
    return provideInstance(module);
  }

  public static KickMaterialApp provideInstance(AppModule module) {
    return proxyProvidesApp$app_debug(module);
  }

  public static AppModule_ProvidesApp$app_debugFactory create(AppModule module) {
    return new AppModule_ProvidesApp$app_debugFactory(module);
  }

  public static KickMaterialApp proxyProvidesApp$app_debug(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.providesApp$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
