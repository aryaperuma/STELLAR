// Generated by Dagger (https://google.github.io/dagger).
package com.byoutline.kickmaterial.dagger;

import android.arch.lifecycle.ViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ViewModelProvidersModule_RewardListViewModelFactory
    implements Factory<ViewModel> {
  private final ViewModelProvidersModule module;

  public ViewModelProvidersModule_RewardListViewModelFactory(ViewModelProvidersModule module) {
    this.module = module;
  }

  @Override
  public ViewModel get() {
    return provideInstance(module);
  }

  public static ViewModel provideInstance(ViewModelProvidersModule module) {
    return proxyRewardListViewModel(module);
  }

  public static ViewModelProvidersModule_RewardListViewModelFactory create(
      ViewModelProvidersModule module) {
    return new ViewModelProvidersModule_RewardListViewModelFactory(module);
  }

  public static ViewModel proxyRewardListViewModel(ViewModelProvidersModule instance) {
    return Preconditions.checkNotNull(
        instance.rewardListViewModel(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
